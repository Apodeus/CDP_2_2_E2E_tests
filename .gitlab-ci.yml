stages:
  - integration_tests
  - unit_tests
  - deploy_analyse

image:
  finanzcheck/docker-node-java:latest

unit-test:
  stage: unit_tests
  before_script:
  - npm install jsdom
  - npm install jest
  - npm install jest-sonar-reporter
  script:
  - npm run test
  cache:
    paths:
    - coverage/
    - reports_sonar/

it-tests:
  stage: integration_tests
  image: docker:latest
  services:
    - docker:dind
  cache:
    paths:
    - coverage/
    - reports_sonar/
  before_script:
    - apk update
    - apk upgrade
    - apk add python python-dev py-pip build-base
    - apk add --update nodejs nodejs-npm
    - pip install docker-compose
    - npm i npm@latest -g
    - npm install mysql2
    - npm install util
    - npm install jest
    - npm install jest-sonar-reporter
  script:
    - docker-compose up -d
    - echo "NE PAS OUBLIER DE RESPAWN LES JOBS"
    - sleep 60
    - docker ps
    - docker inspect database
    - npm run it-test




sonar:
  stage: deploy_analyse
  cache:
    paths:
    - coverage/
    - reports_sonar/
  before_script:
    - npm install sonar-scanner@3.1.0
  script:
    - ls
    - npm run sonar-scanner -- -Dsonar.host.url=https://sonarcloud.io -Dsonar.projectKey=cdp:cdp -Dsonar.organization=apodeus-github -Dsonar.sources=src -Dsonar.test=src -Dsonar.test.inclusions=src/test/unit_tests/*.test.js -Dsonar.plsql.version=5.6 -Dsonar.branch.name=$CI_COMMIT_REF_NAME -Dsonar.login=$SONAR_TOKEN -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info -Dsonar.testExecutionReportPaths=reports_sonar/test-info.xml

docker-img:
    stage: deploy_analyse
    services:
    - docker:dind

    before_script:
    - docker info
    - apk update
    - apk upgrade
    - apk add python python-dev py-pip build-base
    - pip install docker-compose

    image: docker:latest
    script:
    - docker-compose up --no-start
    after_script:
    - docker-compose down
